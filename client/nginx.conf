worker_processes auto;
rtmp_auto_push on;
events {}

# HLS 串流設定 (保留供未來使用)
rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;

        application live {
            live on;
            record off;

            hls on;
            hls_path /tmp/hls; 
            hls_fragment 1s; #default is 5s
            hls_playlist_length 20s; # default is 30s
            hls_cleanup on; # once playlist length is reached it deletes the oldest fragments
        }
    }
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 8080;
        server_name localhost;
        root /www;
        index index.html;

        # 支援 gzip 壓縮
        gzip on;
        gzip_types
            text/plain
            text/css
            text/js
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;

        # SPA 路由支援 - 所有路由都 fallback 到 index.html
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 靜態資源快取
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # HLS 串流端點 (供未來使用)
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                application/octet-stream ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            # CORS 支援
            add_header Access-Control-Allow-Origin *;
        }

        # Socket.IO 代理 (必要！否則無法連接後端)
        location /socket.io/ {
            proxy_pass http://server:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}